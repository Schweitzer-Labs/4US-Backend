TransactionsTableWriteCapacityScalableTarget:
  Type: AWS::ApplicationAutoScaling::ScalableTarget
  Condition: Production
  DependsOn: Transactions
  Properties:
    MaxCapacity: 100
    MinCapacity: 5
    ResourceId: !Sub table/${Transactions}
    RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable
    ScalableDimension: dynamodb:table:WriteCapacityUnits
    ServiceNamespace: dynamodb

TransactionsTableWriteScalingPolicy:
  Type: AWS::ApplicationAutoScaling::ScalingPolicy
  Condition: Production
  Properties:
    PolicyName: WriteAutoScalingPolicy
    PolicyType: TargetTrackingScaling
    ScalingTargetId: !Ref TransactionsTableWriteCapacityScalableTarget
    TargetTrackingScalingPolicyConfiguration:
      TargetValue: 70
      ScaleInCooldown: 60
      ScaleOutCooldown: 60
      PredefinedMetricSpecification:
        PredefinedMetricType: DynamoDBWriteCapacityUtilization

TransactionsIndexWriteCapacityScalableTarget:
  Type: AWS::ApplicationAutoScaling::ScalableTarget
  Condition: Production
  DependsOn: Transactions
  Properties:
    MaxCapacity: 100
    MinCapacity: 5
    ResourceId: !Sub table/${Transactions}/index/TransactionsByCommitteeDonorIndex
    RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable
    ScalableDimension: dynamodb:index:WriteCapacityUnits
    ServiceNamespace: dynamodb

TransactionsIndexWriteScalingPolicy:
  Type: AWS::ApplicationAutoScaling::ScalingPolicy
  Condition: Production
  Properties:
    PolicyName: WriteAutoScalingPolicy
    PolicyType: TargetTrackingScaling
    ScalingTargetId: !Ref TransactionsIndexWriteCapacityScalableTarget
    TargetTrackingScalingPolicyConfiguration:
      TargetValue: 70
      ScaleInCooldown: 60
      ScaleOutCooldown: 60
      PredefinedMetricSpecification:
        PredefinedMetricType: DynamoDBWriteCapacityUtilization

TransactionsTableReadCapacityScalableTarget:
  Type: AWS::ApplicationAutoScaling::ScalableTarget
  Condition: Production
  DependsOn: Transactions
  Properties:
    MaxCapacity: 100
    MinCapacity: 5
    ResourceId: !Sub table/${Transactions}
    RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable
    ScalableDimension: dynamodb:table:ReadCapacityUnits
    ServiceNamespace: dynamodb

TransactionsTableReadScalingPolicy:
  Type: AWS::ApplicationAutoScaling::ScalingPolicy
  Condition: Production
  Properties:
    PolicyName: ReadAutoScalingPolicy
    PolicyType: TargetTrackingScaling
    ScalingTargetId: !Ref TransactionsTableReadCapacityScalableTarget
    TargetTrackingScalingPolicyConfiguration:
      TargetValue: 70
      ScaleInCooldown: 60
      ScaleOutCooldown: 60
      PredefinedMetricSpecification:
        PredefinedMetricType: DynamoDBReadCapacityUtilization

TransactionsIndexReadCapacityScalableTarget:
  Type: AWS::ApplicationAutoScaling::ScalableTarget
  Condition: Production
  DependsOn: Transactions
  Properties:
    MaxCapacity: 100
    MinCapacity: 5
    ResourceId: !Sub table/${Transactions}/index/TransactionsByCommitteeDonorIndex
    RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable
    ScalableDimension: dynamodb:index:ReadCapacityUnits
    ServiceNamespace: dynamodb

TransactionsIndexReadScalingPolicy:
  Type: AWS::ApplicationAutoScaling::ScalingPolicy
  Condition: Production
  Properties:
    PolicyName: ReadAutoScalingPolicy
    PolicyType: TargetTrackingScaling
    ScalingTargetId: !Ref TransactionsIndexReadCapacityScalableTarget
    TargetTrackingScalingPolicyConfiguration:
      TargetValue: 70
      ScaleInCooldown: 60
      ScaleOutCooldown: 60
      PredefinedMetricSpecification:
        PredefinedMetricType: DynamoDBReadCapacityUtilization
