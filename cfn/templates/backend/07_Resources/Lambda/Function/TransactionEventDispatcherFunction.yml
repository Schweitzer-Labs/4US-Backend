TransactionEventDispatcherFunction:
  Type: AWS::Serverless::Function
  Properties:
    FunctionName: !Sub ${AWS::StackName}-TransactionEventDispatcherFunction
    Description: Receive DynamoDB events and queues notifications with transaction details
    CodeUri: lambdas/
    Layers:
      - !Ref ServicesLayer
    Handler: app.transactionEventDispatcherHandler
    Runtime: nodejs12.x
    Role: !GetAtt LambdaDonationReceiverRole.Arn
    Events:
      TransactionRecorded:
        Type: DynamoDB
        Properties:
          BatchSize: 1
          StartingPosition: LATEST
          Stream: !GetAtt DynamoDBsTemplate.Outputs.TransactionsStream
    DeadLetterQueue:
      TargetArn: !Ref LambdaDLQ
      Type: SNS
    Environment:
      Variables:
        RUNENV:
          !Ref LambdaRunEnvironment
        SQSQUEUE:
          !Ref EmailQueue
        TRANSACTIONS_DDB_TABLE_NAME:
          !GetAtt DynamoDBsTemplate.Outputs.TransactionsTableName
        COMMITTEES_DDB_TABLE_NAME:
          !GetAtt DynamoDBsTemplate.Outputs.CommitteesTableName
        AGGREGATES_DDB_TABLE_NAME:
          !GetAtt DynamoDBsTemplate.Outputs.AggregatesTableName
        AUDIT_LOGS_DDB_TABLE_NAME:
          !GetAtt DynamoDBsTemplate.Outputs.AuditLogsTableName


TxnDispatcherInvokeConfig:
  Type: AWS::Lambda::EventInvokeConfig
  Properties:
    FunctionName: !Ref TransactionEventDispatcherFunction
    Qualifier: "$LATEST"
    MaximumRetryAttempts: 0
    DestinationConfig:
      OnSuccess:
        Destination: !Ref LambdaSuccessQueue
